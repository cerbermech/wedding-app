import { useEffect, useState } from "react";
import "./../styles/program.css";

export default function Program() {
  // üìÖ –¥–∞—Ç–∞ —Å–≤–∞–¥—å–±—ã ‚Äî 8 –∞–≤–≥—É—Å—Ç–∞ 2026, 15:00
  const weddingDate = new Date(2026, 7, 8, 15, 0, 0);

  const [timeLeft, setTimeLeft] = useState("");

  const timeline = [
    { time: "15:00", icon: "üíç", text: "–ó–ê–ì–° ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ü–µ—Ä–µ–º–æ–Ω–∏—è" },
    { time: "17:00", icon: "üç∑", text: "–ë–∞–Ω–∫–µ—Ç ‚Äî –Ω–∞—á–∞–ª–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞" },
    { time: "–î–∞–ª—å—à–µ –±–æ–ª—å—à–µ", icon: "üíÉ", text: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç —É—Ç–æ—á–Ω—è—Ç—å—Å—è" },
  ];

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    const interval = setInterval(() => {
      const now = new Date();
      const diff = weddingDate - now;

      if (diff <= 0) {
        setTimeLeft("–°–≤–∞–¥—å–±–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å! üéâ");
        clearInterval(interval);
      } else {
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        const minutes = Math.floor((diff / (1000 * 60)) % 60);
        const seconds = Math.floor((diff / 1000) % 60);

        setTimeLeft(`${days}–¥ ${hours}—á ${minutes}–º ${seconds}—Å`);
      }
    }, 1000);

    return () => clearInterval(interval);
  }, [weddingDate]);

  // üìÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  const addToCalendar = () => {
    const title = encodeURIComponent("–°–≤–∞–¥—å–±–∞ –ú–∞–∫—Å–∞ –∏ –õ–µ–Ω—ã üíç");
    const details = encodeURIComponent("–ù–∞—à –ø—Ä–∞–∑–¥–Ω–∏–∫! üéâ");
    const location = encodeURIComponent("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥");

    // ‚ö†Ô∏è –í—Ä–µ–º—è –≤ UTC! –ï—Å–ª–∏ —Å–≤–∞–¥—å–±–∞ –≤ 15:00 –ø–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥—É (GMT+5),
    // —Ç–æ –≤ UTC —ç—Ç–æ –±—É–¥–µ—Ç 10:00.
    const start = "20260808T100000Z";
    const end = "20260808T160000Z";

    const googleUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${title}&details=${details}&location=${location}&dates=${start}/${end}`;

    window.open(googleUrl, "_blank");
  };

  return (
    <div className="program-container">
      <h2 className="program-title">üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–Ω—è</h2>

      {/* –¢–∞–π–º–µ—Ä */}
      <div className="countdown">
        <p>–î–æ —Å–≤–∞–¥—å–±—ã –æ—Å—Ç–∞–ª–æ—Å—å:</p>
        <h3>{timeLeft}</h3>
      </div>

      {/* –¢–∞–π–º–ª–∞–π–Ω */}
      <div className="timeline">
        {timeline.map((item, index) => {
          let statusClass = "";
          if (item.time.includes(":")) {
            const [h, m] = item.time.split(":").map(Number);
            const eventDate = new Date(weddingDate);
            eventDate.setHours(h, m);

            statusClass = eventDate < new Date() ? "past" : "future";
          }

          return (
            <div key={index} className={`timeline-item ${statusClass}`}>
              <div className="timeline-time">{item.time}</div>
              <div className="timeline-icon">{item.icon}</div>
              <div className="timeline-text">{item.text}</div>
            </div>
          );
        })}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å */}
      <button onClick={addToCalendar} className="calendar-btn">
        üìÖ –î–æ–±–∞–≤–∏—Ç—å –≤ Google Calendar
      </button>
    </div>
  );
}