import { useState, useEffect } from "react";
import confetti from "canvas-confetti";
import "./../styles/rsvp.css";

export default function RSVP() {
  const [name, setName] = useState("");
  const [choice, setChoice] = useState(null);
  const [plusOne, setPlusOne] = useState(""); // –∏–º—è +1
  const [guests, setGuests] = useState([]);
  const [submitted, setSubmitted] = useState(false);

  const API_URL = "http://46.173.28.77:5000/api/guests";

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π
  const loadGuests = () => {
    fetch(API_URL)
      .then((res) => res.json())
      .then((data) => setGuests(data))
      .catch((err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ—Å—Ç–µ–π:", err));
  };

  useEffect(() => {
    loadGuests();
  }, []);

  const handleSubmit = async () => {
    if (!name) return; // –∑–∞—â–∏—Ç–∞

    if (choice === "ü•Ç –ë—É–¥—É!" || choice === "üëØ –ë—É–¥—É —Å +1") {
      confetti({ particleCount: 120, spread: 80, origin: { y: 0.6 } });
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫
    const res = await fetch(API_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        name,
        choice,
        plusOne: choice === "üëØ –ë—É–¥—É —Å +1" ? plusOne || null : null,
      }),
    });

    const result = await res.json();
    if (result.success) {
      loadGuests(); // –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å–æ–∫
      setSubmitted(true);
    }
  };

  // üìä –ü–æ–¥—Å—á—ë—Ç –≥–æ—Å—Ç–µ–π —Å —É—á–µ—Ç–æ–º +1
  const totalCount = guests.reduce((acc, g) => {
    if (g.choice === "ü•Ç –ë—É–¥—É!") return acc + 1;
    if (g.choice === "üëØ –ë—É–¥—É —Å +1") return acc + (g.plusOne ? 2 : 1);
    return acc;
  }, 0);

  return (
    <div className="rsvp-container">
      <h2 className="rsvp-title">‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—á–∞—Å—Ç–∏—è</h2>

      {!submitted && (
        <>
          <input
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            placeholder="–í–∞—à–µ –∏–º—è"
            className="name-input"
            required
          />

          {choice === "üëØ –ë—É–¥—É —Å +1" && (
            <input
              type="text"
              value={plusOne}
              onChange={(e) => setPlusOne(e.target.value)}
              placeholder="–ò–º—è —Å–ø—É—Ç–Ω–∏–∫–∞"
              className="name-input"
            />
          )}

          <div className="rsvp-options">
            <div
              className={`rsvp-card ${choice === "ü•Ç –ë—É–¥—É!" ? "selected" : ""}`}
              onClick={() => setChoice("ü•Ç –ë—É–¥—É!")}
            >
              ü•Ç –ë—É–¥—É!
            </div>
            <div
              className={`rsvp-card ${choice === "üò¢ –ù–µ —Å–º–æ–≥—É" ? "selected" : ""}`}
              onClick={() => setChoice("üò¢ –ù–µ —Å–º–æ–≥—É")}
            >
              üò¢ –ù–µ —Å–º–æ–≥—É
            </div>
            <div
              className={`rsvp-card ${choice === "üëØ –ë—É–¥—É —Å +1" ? "selected" : ""}`}
              onClick={() => setChoice("üëØ –ë—É–¥—É —Å +1")}
            >
              üëØ –ë—É–¥—É —Å +1
            </div>
          </div>

          {choice && (
            <button
              className="submit-btn"
              onClick={handleSubmit}
              disabled={!name.trim()} // üö´ –±–ª–æ–∫–∏—Ä—É–µ–º –±–µ–∑ –∏–º–µ–Ω–∏
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
          )}
        </>
      )}

      {/* —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π */}
      <div className="guest-list">
        <h3>üìã –£–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ</h3>
        <p className="guest-count">–í—Å–µ–≥–æ –≥–æ—Å—Ç–µ–π: {totalCount} üéâ</p>
        {guests.length === 0 ? (
          <p>–ü–æ–∫–∞ –Ω–∏–∫–æ–≥–æ</p>
        ) : (
          <ul>
            {guests.map((g, i) => (
              <li key={i}>
                <strong>{g.name}</strong> ‚Äî {g.choice}
                {g.plusOne && <span> (—Å {g.plusOne})</span>}
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  );
}